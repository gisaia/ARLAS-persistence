server:
  requestLog:
    appenders:
      - type: file
        currentLogFilename: ${ARLAS_SERVER_ACCESS_LOG_FILE:-arlas-persistence-access.log}
        archivedLogFilenamePattern: ${ACCESS_SERVER_LOG_FILE_ARCHIVE:-arlas-persistence-access-%d.log.gz}
  registerDefaultExceptionMappers: false
  type: simple
  rootPath: ${ARLAS_SERVER_PREFIX:-/arlas_persistence_server}
  applicationContextPath: ${ARLAS_SERVER_APP_PATH:-/}
  adminContextPath: ${ARLAS_SERVER_ADMIN_PATH:-/admin}
  connector:
    type: http
    port: ${ARLAS_SERVER_PORT:-9997}
  maxThreads: ${ARLAS_SERVER_MAX_THREADS:-1024}
  minThreads: ${ARLAS_SERVER_MIN_THREADS:-8}
  maxQueuedRequests: ${ARLAS_SERVER_MAX_QUEUED_REQUESTS:-1024}

########################################################
############ LOGGING                     ###############
########################################################
# Configuration console and file LOGGING
logging:
  level: ${ARLAS_LOGGING_LEVEL:-INFO}
  loggers:
    "javax.management.mbeanserver": ${ARLAS_LOGGING_MBEAN_LEVEL:-INFO}
  appenders:
    - type: console
      threshold:  ${ARLAS_LOGGING_CONSOLE_LEVEL:-INFO}
    - type: file
      currentLogFilename: ${ARLAS_LOGGING_FILE:-arlas.log}
      threshold: ${ARLAS_LOGGING_FILE_LEVEL:-INFO}
      archive: ${ARLAS_LOGGING_FILE_ARCHIVE:-true}
      archivedLogFilenamePattern: ${ARLAS_LOGGING_FILE_ARCHIVE_FILE_PATTERN:-arlas-%d.log}
      archivedFileCount: ${ARLAS_LOGGING_FILE_ARCHIVE_FILE_COUNT:-5}

########################################################
############ ARLAS GTFS SERVER           ###############
########################################################
swagger: # Configuration of SWAGGER for generating documentation and APIs
  resourcePackage: io.arlas.persistence.rest # The java package to process for extracting the APIs

arlas_cors_enabled: ${ARLAS_SERVER_CORS_ENABLED:-true}

arlas_auth:
  enabled: ${ARLAS_AUTH_ENABLED:-false}
  public_uris: [${ARLAS_AUTH_PUBLIC_URIS:-swagger,swagger.json}]
  login_url: ${ARLAS_AUTH_LOGIN_URL:-}
  certificate_file: ${ARLAS_AUTH_CERT_FILE:-/opt/app/arlas.pem}


########################################################
############ ZIPKIN                      ###############
########################################################
# Zipkin let you analyze the API calls
zipkin: # The ZIPIN configuration, not active by default
  enabled: ${ARLAS_ZIPKIN_ENABLED:-false} # Do we want zipkin to collect the API calls? Not by default.
  serviceHost: ${ARLAS_ZIPKIN_SERVICE_HOST:-127.0.0.1} # Listening IP address of the service
  servicePort: ${ARLAS_PORT:-9997} # Listening port of the service
  collector: ${ARLAS_ZIPKIN_COLLECTOR:-http}
  baseUrl: ${ARLAS_ZIPKIN_BASEURL:-http://localhost:9411} # Where is zipkin running?


key_header: ${ARLAS_PERSISTENCE_KEY_HEADER:-X-Forwarded-User}