server:
  requestLog:
    appenders:
      - type: file
        currentLogFilename: ${ARLAS_PERSISTENCE_ACCESS_LOG_FILE:-arlas-persistence-access.log}
        archivedLogFilenamePattern: ${ARLAS_PERSISTENCE_LOG_FILE_ARCHIVE:-arlas-persistence-access-%d.log.gz}
  registerDefaultExceptionMappers: false
  type: simple
  rootPath: ${ARLAS_PERSISTENCE_PREFIX:-/arlas_persistence_server}
  applicationContextPath: ${ARLAS_PERSISTENCE_APP_PATH:-/}
  adminContextPath: ${ARLAS_PERSISTENCE_ADMIN_PATH:-/admin}
  connector:
    type: http
    port: ${ARLAS_PERSISTENCE_PORT:-9997}
  maxThreads: ${ARLAS_PERSISTENCE_MAX_THREADS:-1024}
  minThreads: ${ARLAS_PERSISTENCE_MIN_THREADS:-8}
  maxQueuedRequests: ${ARLAS_PERSISTENCE_MAX_QUEUED_REQUESTS:-1024}


########################################################
############ URL Masking                 ###############
########################################################
arlas-base-uri: ${ARLAS_PERSISTENCE_BASE_URI:-}

########################################################
############ LOGGING                     ###############
########################################################
# Configuration console and file LOGGING
logging:
  level: ${ARLAS_PERSISTENCE_LOGGING_LEVEL:-INFO}
  loggers:
    "javax.management.mbeanserver": ${ARLAS_LOGGING_MBEAN_LEVEL:-INFO}
    "org.apache.http": ${ARLAS_LOGGING_APACHE_HTTP_LEVEL:-INFO}
    "org.eclipse.jetty": ${ARLAS_LOGGING_JETTY_LEVEL:-INFO}
    "org.reflections": ${ARLAS_LOGGING_REFLECTIONS_LEVEL:-INFO}
    "org.glassfish": ${ARLAS_LOGGING_GLASSFISH_LEVEL:-INFO}
    "io.dropwizard": ${ARLAS_LOGGING_DROPWIZARD_LEVEL:-INFO}
    "io.swagger": ${ARLAS_LOGGING_SWAGGER_LEVEL:-INFO}
    "com.hazelcast": ${ARLAS_LOGGING_HAZELCAST_LEVEL:-INFO}
  appenders:
    - type: console
      threshold:  ${ARLAS_PERSISTENCE_LOGGING_CONSOLE_LEVEL:-INFO}
    - type: file
      currentLogFilename: ${ARLAS_PERSISTENCE_LOGGING_FILE:-arlas-persistence.log}
      threshold: ${ARLAS_PERSISTENCE_LOGGING_FILE_LEVEL:-INFO}
      archive: ${ARLAS_PERSISTENCE_LOGGING_FILE_ARCHIVE:-true}
      archivedLogFilenamePattern: ${ARLAS_PERSISTENCE_LOGGING_FILE_ARCHIVE_FILE_PATTERN:-arlas-persistence-%d.log}
      archivedFileCount: ${ARLAS_PERSISTENCE_LOGGING_FILE_ARCHIVE_FILE_COUNT:-5}



########################################################
############ ZIPKIN                      ###############
########################################################
# Zipkin let you analyze the API calls
zipkin: # The ZIPIN configuration, not active by default
  enabled: ${ARLAS_PERSISTENCE_ZIPKIN_ENABLED:-false} # Do we want zipkin to collect the API calls? Not by default.
  serviceHost: ${ARLAS_PERSISTENCE_ZIPKIN_SERVICE_HOST:-127.0.0.1} # Listening IP address of the service
  servicePort: ${ARLAS_PERSISTENCE_PORT:-9997} # Listening port of the service
  collector: ${ARLAS_PERSISTENCE_ZIPKIN_COLLECTOR:-http}
  baseUrl: ${ARLAS_PERSISTENCE_ZIPKIN_BASEURL:-http://localhost:9411} # Where is zipkin running?


########################################################
############ ARLAS PERSISTENCE SERVER           ###############
########################################################
swagger: # Configuration of SWAGGER for generating documentation and APIs
  resourcePackage: io.arlas.persistence.rest # The java package to process for extracting the APIs
  # temporary patch for bug https://github.com/smoketurner/dropwizard-swagger/issues/206
  # to be removed when version of dropwizard.swagger.version is upgraded
  customJavascript: ${ARLAS_PERSISTENCE_CUSTOM_JS:-/arlas_persistence_server/swagger-static/custom-request-interceptor.js}

arlas_cors:
  enabled: ${ARLAS_CORS_ENABLED:-true}
  allowed_origins: ${ARLAS_CORS_ALLOWED_ORIGINS:-"*"}
  allowed_headers: ${ARLAS_CORS_ALLOWED_HEADERS:-"arlas-user,arlas-groups,arlas-organization,X-Requested-With,Content-Type,Accept,Origin,Authorization,WWW-Authenticate"}
  allowed_methods: ${ARLAS_CORS_ALLOWED_METHODS:-"OPTIONS,GET,PUT,POST,DELETE,HEAD"}
  allowed_credentials: ${ARLAS_CORS_ALLOWED_CREDENTIALS:-true}
  exposed_headers: ${ARLAS_CORS_EXPOSED_HEADERS:-"Content-Type,Authorization,X-Requested-With,Content-Length,Accept,Origin,Location,WWW-Authenticate"}

persistence_engine: ${ARLAS_PERSISTENCE_ENGINE:-file}
firestore_collection: ${ARLAS_PERSISTENCE_FIRESTORE_COLLECTION:-user_pref}
local_folder: ${ARLAS_PERSISTENCE_LOCAL_FOLDER:-/tmp/persist/}

arlas_organization_header: ${ARLAS_ORGANIZATION_HEADER:-arlas-organization}
anonymous_value: ${ARLAS_ANONYMOUS_VALUE:-anonymous}

database:
  # the name of your JDBC driver
  driverClass: ${ARLAS_PERSISTENCE_HIBERNATE_DRIVER:-org.postgresql.Driver}
  user: ${ARLAS_PERSISTENCE_HIBERNATE_USER:-pg-user}
  password: ${ARLAS_PERSISTENCE_HIBERNATE_PASSWORD:-iAMs00perSecrEET}
  # the JDBC URL
  url: ${ARLAS_PERSISTENCE_HIBERNATE_URL:-jdbc:postgresql://localhost:5432/arlas_persistence}
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: ${ARLAS_PERSISTENCE_HIBERNATE_DIALECT:-org.hibernate.dialect.PostgreSQLDialect}
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s
  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"
  # the minimum number of connections to keep open
  minSize: 8
  # the maximum number of connections to keep open
  maxSize: 32
  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

########################################################
############ AUTHENTICATION              ###############
########################################################
arlas_auth_policy_class: ${ARLAS_AUTH_POLICY_CLASS:-io.arlas.commons.rest.auth.NoPolicyEnforcer}
arlas_cache_factory_class: ${ARLAS_PERSISTENCE_CACHE_FACTORY_CLASS:-io.arlas.commons.cache.NoCacheFactory}
arlas-cache-timeout: ${ARLAS_CACHE_TIMEOUT:-60}

